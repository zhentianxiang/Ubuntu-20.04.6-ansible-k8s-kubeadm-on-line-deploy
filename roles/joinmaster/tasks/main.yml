---
- name: 创建临时目录
  file: dest={{ tmp_dir }} state=directory

- name: 下载 Kubernetes APT 公钥
  apt_key:
    url: "{{ kube_gpg_key }}"
    state: present

- name: 添加 Kubernetes APT 源
  apt_repository:
    repo: "{{ kube_repo }}"
    state: present
    filename: "kubernetes"

- name: 更新 APT 缓存
  apt:
    update_cache: yes

- name: 安装kubelet kubeadm kubectl
  package:
    name:
      - "kubelet={{ kube_version }}"
      - "kubeadm={{ kube_version }}"
      - "kubectl={{ kube_version }}"
    state: present

- name: 删除默认的 kubeadm 二进制文件
  file:
    path: /usr/bin/kubeadm
    state: absent

- name: 拷贝二次修改的 kubeadm-v1.23.0 的二进制文件
  copy:
    src: kubeadm
    dest: /usr/bin/kubeadm
    mode: '0755'

- name: 启动kubelet
  systemd:
    name: kubelet
    state: restarted
    enabled: yes
    daemon_reload: yes    

- name: 重置k8s系统
  shell: "kubeadm reset -f"

- name: 删除相关 kube 文件和目录
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/kubernetes/
    - "{{ ansible_env.HOME }}/.kube/config"
    - /var/lib/kubelet
    - /var/lib/dockershim
    - /var/run/kubernetes
    - /var/lib/cni
    - /etc/cni/net.d

- name: 分发join脚本
  copy:
    src: "{{ tmp_dir }}/master-join.sh"
    dest: "{{ tmp_dir }}/master-join.sh"
    mode: '0755'

- name: 加入集群
  ignore_errors: yes
  shell: "/bin/bash {{ tmp_dir }}/master-join.sh >/dev/null 2>&1"

- name: 创建 $HOME/.kube
  shell: "mkdir -p $HOME/.kube"

- name: 配置$HOME/.kube用户权限
  copy:
    src: "/etc/kubernetes/admin.conf"
    dest: "$HOME/.kube/config"
    owner: root
    group: root
    mode: '0600'

- name: 设置kubectl自动补全
  lineinfile:
    dest: ~/.bashrc
    line: "{{ item }}"
  with_items:
    - "source <(kubectl completion bash)"

- name: 修改 kubelet 存储目录
  template: src=kubelet.j2 dest=/etc/sysconfig/kubelet

- name: 修改 cgroup 为 systemd
  template: src=10-kubeadm.conf.j2 dest=/etc/systemd/system/kubelet.service.d/10-kubeadm.conf

- name: 重启kubelet
  systemd:
    name: kubelet
    state: restarted
    enabled: yes
    daemon_reload: yes

- name: 等待 Kubernetes API 服务器准备好
  wait_for:
    host: "{{ inventory_hostname }}"  # 目标主机的名称
    port: 6443  # Kubernetes API 服务器的端口
    state: started
  delegate_to: localhost
  ignore_errors: yes  # 忽略错误，因为在 Kubernetes 启动之前可能会超时
