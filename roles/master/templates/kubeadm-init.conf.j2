apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
bootstrapTokens:
- groups:
  - system:bootstrappers:kubeadm:default-node-token
  token: 35sesk.5tm3tqc66tzlse8c
  ttl: 24h0m0s
  usages:
  - signing
  - authentication
localAPIEndpoint:
  advertiseAddress: 0.0.0.0
  bindPort: 6443
nodeRegistration:
  name: "{{ ansible_hostname }}"  # 动态获取当前主机名
  criSocket: unix:///run/containerd/containerd.sock
  imagePullPolicy: IfNotPresent
  kubeletExtraArgs:
    cgroup-driver: "systemd"  # 指定 kubelet 使用 systemd 作为 Cgroup 驱动
  taints:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
kubernetesVersion: "{{ k8s_version }}"
imageRepository: "{{ k8s_image_url }}"
networking:
  dnsDomain: cluster.local
  podSubnet: "{{ pod_cidr }}"
  serviceSubnet: "{{ service_cidr }}"
apiServer:
  certSANs:
  - kubernetes
  - kubernetes.default
  - kubernetes.default.svc
  - kubernetes.default.svc.cluster.local
  - dns.linuxtian.com
  - linuxtian.com
  - {{ api_vip_hosts }}
{% for host in groups['master'] %}
  - {{ host }}
  - {{ hostvars[host].ansible_default_ipv4.address }}
{% endfor %}
  - {{ vip }}
  - 127.0.0.1
{% if k8s_extra_ips is defined and k8s_extra_ips|length > 0 %}
{% for ip in k8s_extra_ips %}
  - {{ ip }}
{% endfor %}
{% endif %}
certificatesDir: /etc/kubernetes/pki
clusterName: kubernetes
controlPlaneEndpoint: "{{ api_vip_hosts }}:{{ lb_port }}"
# 使用默认的集群内ETCD
#etcd:
#  local:
#    dataDir: /var/lib/etcd
etcd:
  external:
    endpoints:
{% for host in groups['etcd'] %}
    - https://{{ host }}:2379
{% endfor %}
    caFile: "{{ etcd_ssl }}/etcd-ca.pem"
    certFile: "{{ etcd_ssl }}/etcd-server.pem"
    keyFile: "{{ etcd_ssl }}/etcd-server-key.pem"
# 这种是使用系统网卡IP地址如: https://10.4.212.151:2379
#etcd:
#  external:
#    # 使用外部etcd
#    endpoints:
#{% for host in groups['etcd'] %}
#    - https://{{ hostvars[host].ansible_default_ipv4.address }}:2379
#{% endfor %}
#    caFile: "{{ etcd_ssl }}/etcd-ca.pem"
#    certFile: "{{ etcd_ssl }}/etcd-server.pem"
#    keyFile: "{{ etcd_ssl }}/etcd-server-key.pem"
scheduler: {}
controllerManager: {}
dns: {}
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
mode: ipvs
