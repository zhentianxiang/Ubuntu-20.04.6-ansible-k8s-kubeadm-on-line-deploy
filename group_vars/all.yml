# 允许普通用户执行 sudo
ansible_become: true
ansible_become_method: sudo

# Ubuntu 20.04 安装源配置
docker_gpg_key: "https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg"
docker_ce_repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://mirrors.aliyun.com/docker-ce/linux/ubuntu {{ ubuntu_codename }} stable"
docker_ce: 'docker-ce=5:20.10.10~3-0~ubuntu-focal'
docker_ce_cli: 'docker-ce-cli=5:20.10.10~3-0~ubuntu-focal'

ubuntu_mirror: "http://mirrors.aliyun.com"
ubuntu_release: "{{ ansible_distribution_release }}"
apt_source_template: |
  deb {{ ubuntu_mirror }}/ubuntu {{ ubuntu_release }} main restricted universe multiverse
  deb {{ ubuntu_mirror }}/ubuntu {{ ubuntu_release }}-security main restricted universe multiverse
  deb {{ ubuntu_mirror }}/ubuntu {{ ubuntu_release }}-updates main restricted universe multiverse
  deb {{ ubuntu_mirror }}/ubuntu {{ ubuntu_release }}-backports main restricted universe multiverse

# kubernetes 安装信息
kube_gpg_key: "https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg"
kube_repo: "deb [arch=amd64] https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main"
ghproxy: 'https://ghfast.top'
kube_version: '1.23.0-00'
k8s_version: 'v1.23.0'
code_version: 'v1.23.0'
tmp_dir: '/opt/k8s-install/join'
docker_data_dir: '/var/lib/docker'
kubelet_data_dir: '/var/lib/kubelet'
k8s_image_url: 'registry.cn-hangzhou.aliyuncs.com/google_containers'

# k8s master 节点预留 ip
k8s_extra_ips:
  - "11.0.1.36"
  - "11.0.1.37"
  - "11.0.1.38"
  - "11.0.1.39"
service_cidr: '10.96.0.0/16'                                                          # service ip 段
cluster_dns: '10.96.0.1'                                                              # kube-dns 服务器地址
pod_cidr: '192.18.0.0/16'                                                             # pod ip 段
calico_network: '"interface=ens192"'                                                  # 服务器宿主机网卡信息可以用 "," 分割

# keepalived 配置
nic: 'ens192'
Virtual_Router_ID: '51'
vip: '11.0.1.20'
api_vip_hosts: apiserver.cluster.local
notification_emails:
  - acassen@firewall.loc
  - failover@firewall.loc
  - sysadmin@firewall.loc
smtp_server: '127.0.0.1'
smtp_connect_timeout: '30'
auth_pass: 'kubernetes'

# 负载均衡端口
lb_port: '16443'

# ETCD 集群基本配置
etcd_data: '/var/lib/etcd-external'
etcd_version: 'v3.5.9'
etcd_conf: "/etc/etcd/"
etcd_ssl: '/etc/etcd/ssl'
etcd_cluster_token: "etcd-k8s-cluster"
# ETCD 集群初始状态 (new 或 existing)
etcd_initial_cluster_state: "new"
# 启动等待超时(秒)
etcd_startup_timeout: 60

# ETCD 集群备份
etcd_backup_dir: "/var/lib/etcd-backup"
etcd_backup_keep_days: 7
# etcd-server-csr host 信息预留
extra_ips:
  - "11.0.1.40"
  - "11.0.1.41"
  - "11.0.1.42"
  - "11.0.1.43"

# 性能调优参数
etcd_heartbeat_interval: 200
etcd_election_timeout: 2500
etcd_quota_backend_bytes: 5500000000
etcd_auto_compaction_retention: "1"
etcd_snapshot_count: 50000

# 安全配置
etcd_client_cert_auth: true
etcd_peer_client_cert_auth: true
etcd_auto_tls: false
etcd_peer_auto_tls: false
force_cert_gen: true
force_cert_sync: true

# 日志配置
etcd_log_level: "warn"
etcd_log_output: "stderr"

# 功能开关
etcd_enable_pprof: false
etcd_enable_v2: false
etcd_enable_localhost: true

# 第三方 yaml 路径
k8s_app: '/opt/k8s-install/app'                                                       # 创建了一个存放 yaml 文件的主目录
ingress_app: '/opt/k8s-install/app/ingress'                                           # ingress yaml 存放位置
ingres_label: 'ingress/type: nginx'                                                   # ingress 部署节点 label
openebs_app: '/opt/k8s-install/app/openebs_app'                                       # openebs_app yaml 存放位置
openebs_data: '"/data/openebs"'                                                       # openebs local pvc 数据存储目录
calico_app: '/opt/k8s-install/app/calico'                                             # calico yaml 存放位置

# 定义 Kubernetes 版本与 Calico 版本的映射相关文档: https://docs.tigera.io/calico/3.28/getting-started/kubernetes/requirements
k8s_calico_version_map:
  "1.28": "v3.28.0"
  "1.27": "v3.27.0"
  "1.26": "v3.26.0"
  "1.25": "v3.25.0"
  "1.24": "v3.24.0"
  "1.23": "v3.24.0"
  "1.22": "v3.24.0"

# 定义 Kubernetes 版本与 ingress-nginx 版本的映射
k8s_ingress_version_map:
  "1.29": "v1.10.0"
  "1.28": "v1.9.5"
  "1.27": "v1.9.5"
  "1.26": "v1.9.5"
  "1.25": "v1.5.1"
  "1.24": "v1.5.1"
  "1.23": "v1.5.1"
  "1.22": "v1.5.1"
default_calico_version: "v3.24.0"
default_ingress_version: "v1.5.1"

# 自定义 hosts 解析,ansible 会帮我们自动添加
custom_hosts:
  registry.example.com: 127.0.0.1
