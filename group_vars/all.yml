docker_ce_repo: '"deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable"'  # docker-ce 安装源
docker_gpg_key: ' http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg'               # docker-ce 安装源私钥
docker_ce: 'docker-ce=5:20.10.10~3-0~ubuntu-focal'                                    # docker-ce 安装版本
docker_ce_cli: 'docker-ce-cli=5:20.10.10~3-0~ubuntu-focal'                            # docker-ce-cli 安装版本

kube_gpg_key: "https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg"             # 阿里云 k8s 源证书
kube_repo: "deb [arch=amd64] https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main"  # k8s rpm 包镜像源
ghproxy: 'https://ghfast.top'                                                         # GitHub 代理加速地址
kube_version: '1.23.0-00'                                                             # k8s 安装软件包的版本
code_version: 'v1.23.0'                                                               # k8s 源代码版本

tmp_dir: '/opt/k8s-install/join'                                                      # 初始化集群一些配置文件存放位置
docker_ce: 'docker-ce-20.10.9'                                                        # docker_ce 版本信息
docker_ce_cli: 'docker-ce-cli-20.10.9'                                                # docker_ce_cli 版本信息
containerd: 'containerd.io'                                                           # containerd 版本信息
docker_data_dir: '/var/lib/docker'                                                    # docker 数据存储路径
kube_version: '1.23.0'                                                                # kubrenetes 版本信息(ansible中 main.yml 文件引用的)
k8s_version: 'v1.23.0'                                                                # kubrenetes 初始化定义的版本信息
kubelet_data_dir: '/var/lib/kubelet'                                                  # kubelet (pod) 数据存储路径
Other_URL: 'registry.cn-hangzhou.aliyuncs.com/google_containers'                      # kubrenetes 初始化拉取的镜像前缀
k8s_extra_ips:                                                                        # kubrenetes master 节点信息(预留),并不是当前 hosts.ini 文件定义的,目的是为了后期扩容 master
  - "11.0.1.25"
  - "11.0.1.26"
  - "11.0.1.27"
  - "11.0.1.28"
nic: 'ens192'                                                                         # keepalived 调用本机网卡
Virtual_Router_ID: '50'                                                               # keepalived VRRP 组播协议号(每个局域网环境中唯一)
vip: '11.0.1.11'                                                                      # keepalived vip 地址,如果只是部署单 master 则把 VIP 地址的值写与 master 的 ip 地址相同即可
api_vip_hosts: apiserver.cluster.local                                                # keepalived vip 地址配置的域名
notification_emails:
  - acassen@firewall.loc                                                              # keepalived 邮箱
  - failover@firewall.loc                                                             # keepalived 邮箱
  - sysadmin@firewall.loc                                                             # keepalived 邮箱
smtp_server: '127.0.0.1'                                                              # keepalived 邮件服务器地址
smtp_connect_timeout: '30'                                                            # keepalived 邮件发送超时时间(模板而已,并没有启用)
auth_pass: 'kubernetes'                                                               # keepalived auth_pass
lb_port: '6443'                                                                       # nginx 负载均衡监听端口,如果只是部署单 master 则把端口 从 16443 修改为 6443
etcd_version: 'v3.5.1'                                                                # ETCD 版本
etcd_conf: "/etc/etcd/"                                                               # ETCD 配置文件路径
etcd_ssl: '/etc/etcd/ssl'                                                             # ETCD 证书存储路径
etcd_data: '/var/lib/etcd'                                                            # ETCD 数据存储路径
extra_ips:                                                                            # ETCD 节点信息(预留),并不是当前 hosts.ini 文件定义的,目的是为了后期扩容 etcd
  - "11.0.1.21"
  - "11.0.1.22"
  - "11.0.1.23"
  - "11.0.1.24"
custom_hosts:                                                                         # 自定义 hosts 解析,ansible 会帮我们自动添加
  registry.example.com: 127.0.0.1
service_cidr: '10.96.0.0/16'                                                          # service ip 段
cluster_dns: '10.96.0.1'                                                              # kube-dns 服务器地址
pod_cidr: '192.18.0.0/16'                                                             # pod ip 段
calico_network: '"interface=ens192"'                                                  # 服务器宿主机网卡信息可以用 "," 分割
openebs_data: '"/data/openebs"'                                                       # openebs local pvc 数据存储目录
k8s_app: '/opt/k8s-install/app'                                                       # 创建了一个存放 yaml 文件的主目录
ingress_app: '/opt/k8s-install/app/ingress'                                           # ingress yaml 存放位置
ingres_label: 'ingress/type: nginx'                                                   # ingress 部署节点 label
openebs_app: '/opt/k8s-install/app/openebs_app'                                       # openebs_app yaml 存放位置
calico_app: '/opt/k8s-install/app/calico'                                             # calico yaml 存放位置
k8s_calico_version_map:                                                               # 定义 Kubernetes 版本与 Calico 版本的映射相关文档: https://docs.tigera.io/calico/3.28/getting-started/kubernetes/requirements
  "1.28": "v3.28.0"
  "1.27": "v3.27.0"
  "1.26": "v3.26.0"
  "1.25": "v3.25.0"
  "1.24": "v3.24.0"
  "1.23": "v3.24.0"
  "1.22": "v3.24.0"
k8s_ingress_version_map:                                                              # 定义 Kubernetes 版本与 ingress-nginx 版本的映射
  "1.29": "v1.10.0"
  "1.28": "v1.9.5"
  "1.27": "v1.9.5"
  "1.26": "v1.9.5"
  "1.25": "v1.5.1"
  "1.24": "v1.5.1"
  "1.23": "v1.5.1"
  "1.22": "v1.5.1"
default_calico_version: "v3.25.0"                                                     # 默认的 Calico 和 ingress-nginx 版本（如果未匹配到 Kubernetes 版本）
default_ingress_version: "v1.5.1"
